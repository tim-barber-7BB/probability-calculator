import Head from "next/head";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import { ChangeEvent, FormEvent, useState } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function Home() {

  const [formData, setFormData] = useState({
    probabilityA: "",
    probabilityB: "",
    calculationType: "CombinedWith"
  });

  const [result, setResult] = useState("");

  const handleInput = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>) => {
    const fieldName = e.target.name;
    const fieldValue = e.target.value;

    setResult("");
  
    setFormData((prevState) => ({
      ...prevState,
      [fieldName]: fieldValue
    }));
  }

  async function onSubmit(event: FormEvent<HTMLFormElement>) {
    event.preventDefault()

    const response = await fetch('http://localhost:3001/api/calculate', {
      method: 'POST',
      body: JSON.stringify(formData),
      headers: {
        'Content-type': 'application/json'
      }
    });

    const data = await response.json();

    setResult(JSON.stringify(data));
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}>
        <main className={styles.main}>
          <h1>Probability Calculator</h1>
            <form className={`${styles.form}`} onSubmit={onSubmit}>

              <div>
                <label>Probability A:</label>
                <input name="probabilityA" id="probabilityA" type="number" step="any" required min="0" max="1" onChange={handleInput} />
              </div>

              <div>
                <label>Probability B:</label>
                <input name="probabilityB" id="probabilityB" type="number" step="any" required min="0" max="1" onChange={handleInput} />
              </div>

              <div>
                <label>Calculation Type:</label>

                <select name="calculationType" id="CalculationType" required onChange={handleInput}>
                  <option value="CombinedWith">Combined With</option>
                  <option value="Either">Either</option>
                </select>

              </div>

              <div>
                <button type="submit">Calculate</button>
              </div>
            </form>
            {result !== "" &&
              <h2>Result: {result}</h2>
            }
        </main>
      </div>
    </>
  );
}
